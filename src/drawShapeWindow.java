/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import java.util.Random;

/**
 *
 * @author space_000
 */
public class drawShapeWindow extends javax.swing.JFrame {
    private final LogData dat = new LogData();
    private final FinchDrawShapes shape = new FinchDrawShapes();
    /**
     * Creates new form drawShapeWindow
     */
    public drawShapeWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Triangle = new javax.swing.JButton();
        Rectangle = new javax.swing.JButton();
        Quit = new javax.swing.JButton();
        randShape = new javax.swing.JButton();
        this.setTitle("Main Menu");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Triangle.setText("Triangle");
        Triangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TriangleActionPerformed(evt);
            }
        });

        Rectangle.setText("Rectangle");
        Rectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RectangleActionPerformed(evt);
            }
        });

        Quit.setText("Quit");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });

        randShape.setText("Random Shape");
        randShape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randShapeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Triangle)
                        .addGap(18, 18, 18)
                        .addComponent(Rectangle)
                        .addGap(18, 18, 18)
                        .addComponent(randShape))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(Quit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Triangle)
                    .addComponent(Rectangle)
                    .addComponent(randShape))
                .addGap(18, 18, 18)
                .addComponent(Quit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        // TODO add your handling code here:
        String largestShape = "";
        String mostDrawnShape = "";
        String allShapes = "";
        shape.programQuit();
        try{
            largestShape += dat.getLargestShape();
            mostDrawnShape += dat.getMostDrawnShape();
            allShapes += dat.getoutputAllDrawnShapes();
            if(!largestShape.contains("noData")){
                new information(largestShape, allShapes, mostDrawnShape).setVisible(true);
                this.dispose();
            }
            //this will check if the user has drawn anyshapes.This will not display the user information about the outputs the user has chosen
            //As they have not picked any shapes to draw.
            else if(largestShape.contains("noData")){
                ///THis is a JOptionPane which will ask the user if they want to quit the program even if they haven't drawn any shapes.
                int quit = JOptionPane.showConfirmDialog(this,"Are you sure you want to quit?", "Yes or No?", JOptionPane.YES_NO_OPTION);
                if(quit == JOptionPane.YES_OPTION){
                    this.dispose();
                    System.exit(0);
                }else{
                    
                }
            }
         }catch(IOException ex){
            
        }
        //System.out.println(largestShape);

    }//GEN-LAST:event_QuitActionPerformed

    private void RectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RectangleActionPerformed
        // TODO add your handling code here:
        if(shape.finchIsLevel()){
            this.setVisible(false);
            new RectangleWindow().setVisible(true);
        }
    }//GEN-LAST:event_RectangleActionPerformed

    private void TriangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TriangleActionPerformed
        // TODO add your handling code here:
        if(shape.finchIsLevel()){
            this.setVisible(false);
            new TriangleWindow().setVisible(true);
        }
    }//GEN-LAST:event_TriangleActionPerformed

    private void randShapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randShapeActionPerformed
        // TODO add your handling code here:
        //randomShape will return a value 1 or 2 which will be compared in the 
        //switch statement.
        if(shape.finchIsLevel()){
            int shape = randomShape();
            switch(shape){
                case 1:
                    new RectangleWindow().setVisible(true);
                    break;
                case 2:
                    new TriangleWindow().setVisible(true);
                    break;
                default:
                   break;
            }
            this.setVisible(false);
        }
    }//GEN-LAST:event_randShapeActionPerformed
    public int randomShape(){
        //using a Random object for the program to decide what shape to draw.
        Random rand = new Random();
        int shapeRand = rand.nextInt(2);
        shapeRand = shapeRand + 1;
        //System.out.println(shapeRand); TESTING PURPOSES.
        return shapeRand;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(drawShapeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(drawShapeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(drawShapeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(drawShapeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new drawShapeWindow().setVisible(true);
            }
        });
    }
    @Override
    public void processWindowEvent(WindowEvent e) {
        try{
            if (e.getID() == WindowEvent.WINDOW_CLOSING) {
                //writing to text file if the user closes the program unexpectedly.
                new PrintWriter(new BufferedWriter(new FileWriter("shapeLog.txt", false)));
                this.dispose();
                //This will fully terminate the program
                System.exit(0);
            }   
        }catch(IOException ex){
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Quit;
    private javax.swing.JButton Rectangle;
    private javax.swing.JButton Triangle;
    private javax.swing.JButton randShape;
    // End of variables declaration//GEN-END:variables
}
